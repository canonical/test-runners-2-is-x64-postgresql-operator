"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_kill_db_process[postgres]",""
"unknown","","","","tests.integration.ha_tests","test_smoke","","","","test_app_resources_conflicts_v3","Test application deploy in dirty environment with garbage storage from another application."
"unknown","","","","tests.integration","test_db","","","","test_mailman3_core_db","Deploy Mailman3 Core to test the 'db' relation."
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_scaling","Test that async replication works when scaling the clusters."
"unknown","","","","tests.integration","test_db","","","","test_canonical_livepatch_onprem_bundle_db",""
"unknown","","","","tests.integration","test_password_rotation","","","","test_deploy_active","Build the charm and deploy it."
"unknown","","","","tests.integration","test_password_rotation","","","","test_db_connection_with_empty_password","Test that user can't connect with empty password."
"passed","Thu Jul 04 01:28:50 UTC 2024","Thu Jul 04 01:32:34 UTC 2024","223913","tests.integration","test_config","","","","test_config_parameters","Build and deploy one unit of PostgreSQL and then test config with wrong parameters."
"unknown","","","","tests.integration.ha_tests","test_replication","","","","test_build_and_deploy","Build and deploy three unit of PostgreSQL."
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_get_data_integrator_credentials",""
"passed","Thu Jul 04 01:40:47 UTC 2024","Thu Jul 04 01:44:17 UTC 2024","210738","tests.integration.ha_tests","test_upgrade_from_stable","","","","test_upgrade_from_stable","Test updating from stable channel."
"unknown","","","","tests.integration","test_subordinates","","","","test_scale_up",""
"unknown","","","","tests.integration","test_charm","","","","test_persist_data_through_primary_deletion","Test data persists through a primary deletion."
"unknown","","","","tests.integration.ha_tests","test_smoke","","","","test_charm_garbage_ignorance","Test charm deploy in dirty environment with garbage storage."
"unknown","","","","tests.integration","test_backups","","","","test_restore_on_new_cluster","Test that is possible to restore a backup to another PostgreSQL cluster."
"unknown","","","","tests.integration","test_charm","","","","test_database_is_up[1]",""
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_no_read_only_endpoint_in_standalone_cluster","Test that there is no read-only endpoint in a standalone cluster."
"unknown","","","","tests.integration","test_db","","","","test_roles_blocking",""
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_read_only_endpoint_in_scaled_up_cluster","Test that there is read-only endpoint in a scaled up cluster."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_user_with_extra_roles","Test superuser actions and the request for more permissions."
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_data_integrator_creds_keep_on_working",""
"unknown","","","","tests.integration.ha_tests","test_restore_cluster","","","","test_build_and_deploy","Build and deploy two PostgreSQL clusters."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_full_cluster_restart[SIGTERM-postgres]","This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    "
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_admin_role","Test that the admin role gives access to all the databases."
"unknown","","","","tests.integration","test_charm","","","","test_exporter_is_up[0]",""
"unknown","","","","tests.integration","test_password_rotation","","","","test_no_password_change_on_invalid_password","Test that in general, there is no change when password validation fails."
"unknown","","","","tests.integration","test_tls","","","","test_restart_machine",""
"unknown","","","","tests.integration","test_password_rotation","","","","test_password_from_secret_same_as_cli","Checking if password is same as returned by CLI.

    I.e. we're manipulating the secret we think we're manipulating.
    "
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_kill_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]",""
"passed","Thu Jul 04 01:44:20 UTC 2024","Thu Jul 04 01:48:25 UTC 2024","244817","tests.integration.ha_tests","test_upgrade","","","","test_fail_and_rollback",""
"unknown","","","","tests.integration","test_charm","","","","test_exporter_is_up[1]",""
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_freeze_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]",""
"unknown","","","","tests.integration","test_charm","","","","test_exporter_is_up[2]",""
"unknown","","","","tests.integration","test_subordinates","","","","test_deploy",""
"unknown","","","","tests.integration","test_password_rotation","","","","test_no_password_exposed_on_logs","Test that passwords don't get exposed on postgresql logs."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_forceful_restart_without_data_and_transaction_logs","A forceful restart with deleted data and without transaction logs (forced clone)."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_full_cluster_restart[SIGKILL-postgres]","This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    "
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_storage_re_use","Verifies that database units with attached storage correctly repurpose storage.

    It is not enough to verify that Juju attaches the storage. Hence test checks that the
    postgresql properly uses the storage that was provided. (ie. doesn't just re-sync everything
    from primary, but instead computes a diff between current storage and primary storage.)
    "
"unknown","","","","tests.integration.ha_tests","test_smoke","","","","test_app_resources_conflicts_v2","Test application deploy in dirty environment with garbage storage from another application."
"unknown","","","","tests.integration","test_db","","","","test_sentry_db_blocked",""
"unknown","","","","tests.integration","test_password_rotation","","","","test_password_rotation","Test password rotation action."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_restart_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]",""
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_reestablish_relation","Test that the relation can be broken and re-established."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_relation_data_is_updated_correctly_when_scaling","Test that relation data, like connection data, is updated correctly when scaling."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_an_application_can_request_multiple_databases","Test that an application can request additional databases using the same interface."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_freeze_db_process[postgres]",""
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_async_replication_failover_in_main_cluster","Test that async replication fails over correctly."
"unknown","","","","tests.integration","test_subordinates","","","","test_scale_down",""
"passed","Thu Jul 04 01:28:45 UTC 2024","Thu Jul 04 01:33:35 UTC 2024","289917","tests.integration.relations","test_relations","","","","test_deploy_charms","Deploy both charms (application and database) to use in the tests."
"unknown","","","","tests.integration","test_charm","","","","test_postgresql_parameters_change","Test that's possible to change PostgreSQL parameters."
"unknown","","","","tests.integration","test_charm","","","","test_database_is_up[2]",""
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_full_cluster_restart[SIGTERM-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    "
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_two_applications_doesnt_share_the_same_relation_data","Test that two different application connect to the database with different credentials."
"unknown","","","","tests.integration","test_db_admin","","","","test_landscape_scalable_bundle_db","Deploy Landscape Scalable Bundle to test the 'db-admin' relation."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_database_relation_with_charm_libraries","Test basic functionality of database relation interface."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_nextcloud_db_blocked",""
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_full_cluster_restart[SIGKILL-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    "
"passed","Thu Jul 04 01:33:35 UTC 2024","Thu Jul 04 01:35:35 UTC 2024","120299","tests.integration.relations","test_relations","","","","test_legacy_endpoint_with_multiple_related_endpoints",""
"unknown","","","","tests.integration","test_tls","","","","test_deploy_active","Build the charm and deploy it."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_network_cut_without_ip_change","Completely cut and restore network (situation when the unit IP doesn't change)."
"passed","Thu Jul 04 01:40:44 UTC 2024","Thu Jul 04 01:40:46 UTC 2024","2143","tests.integration.ha_tests","test_upgrade","","","","test_pre_upgrade_check","Test that the pre-upgrade-check action runs successfully."
"unknown","","","","tests.integration.ha_tests","test_replication","","","","test_reelection","Kill primary unit, check reelection."
"unknown","","","","tests.integration.ha_tests","test_replication","","","","test_no_data_replicated_between_clusters","Check that writes in one cluster are not replicated to another cluster."
"unknown","","","","tests.integration","test_tls","","","","test_tls_enabled","Test that TLS is enabled when relating to the TLS Certificates Operator."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_an_application_can_connect_to_multiple_aliased_database_clusters","Test that an application can connect to different clusters of the same database."
"unknown","","","","tests.integration.ha_tests","test_replication","","","","test_consistency","Write to primary, read data from secondaries (check consistency)."
"unknown","","","","tests.integration","test_password_rotation","","","","test_empty_password","Test that the password can't be set to an empty string."
"passed","Thu Jul 04 01:40:46 UTC 2024","Thu Jul 04 01:44:19 UTC 2024","213042","tests.integration.ha_tests","test_upgrade","","","","test_upgrade_from_edge",""
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_an_application_can_connect_to_multiple_database_clusters","Test that an application can connect to different clusters of the same database."
"unknown","","","","tests.integration.ha_tests","test_smoke","","","","test_app_force_removal","Remove unit with force while storage is alive."
"passed","Thu Jul 04 01:29:28 UTC 2024","Thu Jul 04 01:37:03 UTC 2024","454235","tests.integration.new_relations","test_relations_coherence","","","","test_relations","Test that check relation data."
"unknown","","","","tests.integration","test_backups","","","","test_invalid_config_and_recovery_after_fixing_it","Test that the charm can handle invalid and valid backup configurations."
"passed","Thu Jul 04 01:28:58 UTC 2024","Thu Jul 04 01:36:32 UTC 2024","453708","tests.integration","test_plugins","","","","test_plugins","Build and deploy one unit of PostgreSQL and then test the available plugins."
"unknown","","","","tests.integration.ha_tests","test_restore_cluster","","","","test_cluster_restore","Recreates the cluster from storage volumes."
"unknown","","","","tests.integration","test_db","","","","test_relation_data_is_updated_correctly_when_scaling","Test that relation data, like connection data, is updated correctly when scaling."
"unknown","","","","tests.integration","test_charm","","","","test_settings_are_correct[1]",""
"passed","Thu Jul 04 01:29:08 UTC 2024","Thu Jul 04 01:40:44 UTC 2024","695986","tests.integration.ha_tests","test_upgrade","","","","test_deploy_latest","Simple test to ensure that the PostgreSQL and application charms get deployed."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_invalid_extra_user_roles",""
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_promote_standby","Test promoting the standby cluster."
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_switchover","Test switching over to the second cluster."
"unknown","","","","tests.integration","test_charm","","","","test_database_is_up[0]",""
"unknown","","","","tests.integration","test_charm","","","","test_deploy","Deploy the charm-under-test.

    Assert on the unit status before any relations/configurations take place.
    "
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_deploy_async_replication_setup","Build and deploy two PostgreSQL cluster in two separate models to test async replication."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_restart_db_process[postgres]",""
"passed","Thu Jul 04 01:35:35 UTC 2024","Thu Jul 04 01:37:10 UTC 2024","95569","tests.integration.relations","test_relations","","","","test_modern_endpoint_with_multiple_related_endpoints",""
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_async_replication","Test async replication between two PostgreSQL clusters."
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_build_and_deploy","Build and deploy three unit of PostgreSQL."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_deploy_charms","Deploy both charms (application and database) to use in the tests."
"unknown","","","","tests.integration","test_charm","","","","test_settings_are_correct[2]",""
"unknown","","","","tests.integration.ha_tests","test_self_healing","","","","test_network_cut","Completely cut and restore network."
"unknown","","","","tests.integration.new_relations","test_new_relations","","","","test_relation_with_no_database_name","Test that a relation with no database name doesn't block the charm."
"unknown","","","","tests.integration","test_charm","","","","test_settings_are_correct[0]",""
"passed","Thu Jul 04 01:40:45 UTC 2024","Thu Jul 04 01:40:47 UTC 2024","2135","tests.integration.ha_tests","test_upgrade_from_stable","","","","test_pre_upgrade_check","Test that the pre-upgrade-check action runs successfully."
"unknown","","","","tests.integration.ha_tests","test_async_replication","","","","test_async_replication_failover_in_secondary_cluster","Test that async replication fails back correctly."
"unknown","","","","tests.integration","test_charm","","","","test_scale_down_and_up","Test data is replicated to new units after a scale up."
"unknown","","","","tests.integration","test_backups","","","","test_backup","Build and deploy two units of PostgreSQL and then test the backup and restore actions."
"passed","Thu Jul 04 01:29:16 UTC 2024","Thu Jul 04 01:40:44 UTC 2024","688299","tests.integration.ha_tests","test_upgrade_from_stable","","","","test_deploy_stable","Simple test to ensure that the PostgreSQL and application charms get deployed."
