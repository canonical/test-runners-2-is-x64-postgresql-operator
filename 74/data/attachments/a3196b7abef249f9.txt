[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:461 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:464 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:468 Standby leader: postgresql-2
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:469 deleting the standby leader
[32mINFO    [0m juju.model:model.py:2958 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: Standby Leader
[32mINFO    [0m juju.model:model.py:2958 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
[32mINFO    [0m juju.model:model.py:2958 Waiting for model:
  postgresql/2 [executing] active: Standby Leader
[32mINFO    [0m juju.model:model.py:2958 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] maintenance: reconfiguring cluster
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:482 Ensure continuous_writes after the crashed unit
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:487 checking whether no writes were lost